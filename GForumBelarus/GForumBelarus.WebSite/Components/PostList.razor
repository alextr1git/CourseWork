@using Microsoft.AspNetCore.Components.Web
@using GForumBelarus.WebSite.Models
@using GForumBelarus.WebSite.Services
@inject JsonFilePostService PostService

<div class="card-columns">
	@foreach (var Post in PostService.GetPosts())
	{
		 <div> 

			<div class="card">
				<div class="card-img" style="background-image: url('@Post.Image');"></div>
				<div class="card-body">
					<h5 class="card-title">@Post.Title</h5>

				</div>
			</div>
			<div class ="card-footer">
				<small class="text-muted">
					<button @onclick="(e => SelectPost(Post.Id))"
                    data-toggle="modal" data-target="#postModal" class="btn btn-primary">Узнать больше</button>

				</small>
			</div>
		 </div>

	}
</div>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

@if (selectedPost != null)
{	
<div class="modal fade" id="postModal" tabindex="-1" role="dialog" aria-labelledby="postTitle" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered" role="document">

		<div class="modal-content">
						<div class="modal-header">
							<h5 class="modal-title" id="postTitle">@selectedPost.Title</h5>
							<button type="button" class="close" data-dismiss="modal" aria-label="Close">
								<span aria-hidden="true">&times;</span>
							</button>
						</div>
						<div class="modal-body">
							<div class="card">
								<div class="card-img" style="background-image: url('@selectedPost.Image');">
								</div>
								<div class="card-body">
									<p class="card-text">@selectedPost.Description</p>
									
								</div>

								<div class="card-body">
									<p class="card-text">Область: @selectedPost.District</p>
									<p class="card-text">Тег: @selectedPost.Tag</p>
									<p class="card-text">Автор: @selectedPost.Creator (@selectedPost.OwnerEmail)</p>
									<p class="card-text">Дата публикации: @selectedPost.PublDate</p>									

								</div>
							</div>
						</div>
					<div class="modal-footer">

					@if (voteCount == 0)
					{
						<span>Проголосуйте первым!</span>
					}
					else
					{
						<span>@voteCount @voteLabel</span>

					}			

					@for (int i = 1; i <= 5; i++)
					{
						var currentStar = i;
						if (i <= currentRating)
						{
							<span class="fa-star fa checked" @onclick="(e => SubmitRating(currentStar))"></span>
						}
						else
						{
							<span class="fa-star fa" @onclick="(e => SubmitRating(currentStar))"></span>
						}
					}
					</div>

					<span>Comments section</span>

					<div class="card">

						<form method="post">
						<input type="text" @bind-value="@username" name="username">
						<input type="text" @bind-value="@commentaryonform" name="comment"> 
					
						<input type="button" @onclick="(e => SubmitComment(commentaryonform,username))">
						</form> 
							
					</div>
					<div class="modal-footer">

						@if (comCount == 0)
						{
							<span>Оставьте комментарий!</span>
						}
						else
						{
							
							
							<div class="container justify-content-center mt-5 border-left border-right">
								@for (int i = 0; i<comCount; i++){
												
												
												<div class="d-flex justify-content-center py-2">
													<div class="second py-2 px-2"> <span class="commentssection">@CommentsList[i]</span>
														<div class="d-flex justify-content-between py-1 pt-2">
															<div><span class="namecomment">@CommentsUser[i]</span></div>											
														</div>
													</div>
												</div>
								}	
											</div>																																					}
					</div>

				

		</div>		
	</div>
</div>



}


@code {
	Post selectedPost;
	string selectPostId;

	void SelectPost(string postId)
	{
		selectPostId = postId;
		selectedPost = PostService.GetPosts().First(x => x.Id == postId);
		GetCurrentRating();
		GetCurrentComments();
	}

	int currentRating = 0;
	int CurrentCom = 0;
	int voteCount = 0;
	string comLabel;
	int comCount = 0;
	string voteLabel;
	string commentaryonform;
	string username;
	List<string> CommentsList = new List<string>();
	List<string> CommentsUser = new List<string>();

	void GetCurrentRating()
	{
		if (selectedPost.Ratings == null)
		{
			currentRating = 0;
			voteCount = 0;
		}
		else
		{
			voteCount = selectedPost.Ratings.Count();
			voteLabel = voteCount > 1 ? "Оценок" : "Оценка";
			currentRating = selectedPost.Ratings.Sum() / voteCount;
		}
	}

	void GetCurrentComments()
	{
		if (selectedPost.Comments == null)
		{
			CurrentCom = 0;
			comCount = 0;
		}
		else
		{
			comCount = selectedPost.Comments.Count();
			comLabel = comCount > 1 ? "Комментариев" : "Комментарий";
			CommentsList.Clear();
			CommentsUser.Clear();
			foreach (string comment in selectedPost.Comments)
			{
				string[] divided = comment.Split(':');
				CommentsList.Add(divided[1]);
					CommentsUser.Add(divided[0]);
					}
				}
			}
			void SubmitRating(int rating)
			{
				PostService.AddRating(selectPostId, rating);
				SelectPost(selectedPost.Id);

			
			}

				void SubmitComment(string comm, string user)
			{
				PostService.AddComment(selectPostId, comm, user);
				SelectPost(selectedPost.Id);			
			}


}
