@using Microsoft.AspNetCore.Components.Web
@using GForumBelarus.WebSite.Models
@using GForumBelarus.WebSite.Services
@inject JsonFilePostService PostService

<div class="card-columns">
	@foreach (var Post in PostService.GetPosts())
	{
		 <div> 

			<div class="card">
				<div class="card-img" style="background-image: url('@Post.Image');"></div>
				<div class="card-body">
					<h5 class="card-title">@Post.Title</h5>

				</div>
			</div>
			<div class ="card-footer">
				<small class="text-muted">
					<button @onclick="(e => SelectPost(Post.Id))"
                    data-toggle="modal" data-target="#postModal" class="btn btn-primary">More info</button>

				</small>
			</div>
		 </div>

	}
</div>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

@if (selectedPost != null)
{
<div class="modal fade" id="postModal" tabindex="-1" role="dialog" aria-labelledby="postTitle" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered" role="document">

		<div class="modal-content">
						<div class="modal-header">
							<h5 class="modal-title" id="postTitle">@selectedPost.Title</h5>
							<button type="button" class="close" data-dismiss="modal" aria-label="Close">
								<span aria-hidden="true">&times;</span>
							</button>
						</div>
						<div class="modal-body">
							<div class="card">
								<div class="card-img" style="background-image: url('@selectedPost.Image');">
								</div>
								<div class="card-body">
									<p class="card-text">@selectedPost.Description</p>
									
								</div>

								<div class="card-body">

									<p class="card-text">Автор: @selectedPost.Creator</p>
									<p class="card-text">Дата публикации: @selectedPost.PublDate</p>

								</div>
							</div>
						</div>
						<div class="modal-footer">
					@if (voteCount == 0)
					{
						<span>Проголосуйте первым!</span>
					}
					else
					{
						<span>@voteCount @voteLabel</span>

					}

					@for (int i = 1; i <= 5; i++)
					{
						var currentStar = i;
						if (i <= currentRating)
						{
							<span class="fa-star fa checked" @onclick="(e => SubmitRating(currentStar))"></span>
						}
						else
						{
							<span class="fa-star fa" @onclick="(e => SubmitRating(currentStar))"></span>
						}
					}

					</div>
		</div>
	</div>
</div>


}


@code {
	Post selectedPost;
	string selectPostId;

	void SelectPost(string postId)
	{
		selectPostId = postId;
		selectedPost = PostService.GetPosts().First(x => x.Id == postId);
		GetCurrentRating();
	}

	int currentRating = 0;
	int voteCount = 0;
	string voteLabel;

	void GetCurrentRating()
	{
		if (selectedPost.Ratings == null)
		{
			currentRating = 0;
			voteCount = 0;
		}
		else
		{
			voteCount = selectedPost.Ratings.Count();
			voteLabel = voteCount > 1 ? "Оценок" : "Оценка";
			currentRating = selectedPost.Ratings.Sum() / voteCount;
		}
	}

	void SubmitRating(int rating)
	{
		PostService.AddRating(selectPostId, rating);
		SelectPost(selectedPost.Id);
	}

}
